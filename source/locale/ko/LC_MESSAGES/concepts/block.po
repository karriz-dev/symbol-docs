# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-present, NEM
# This file is distributed under the same license as the symbol-docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: symbol-docs 0.22.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-19 21:32+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ko\n"
"Language-Team: ko <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/concepts/block.rst:3
msgid "Block"
msgstr ""

#: ../../source/concepts/block.rst:5
msgid ""
"The central element of every cryptocurrency is a public ledger called the"
" **blockchain**, which links blocks together."
msgstr ""

#: ../../source/concepts/block.rst:7
msgid ""
"Since the blocks in the chain are ordered, the complete :doc:`transaction"
" <transaction>` history is held on the blockchain. Subsequent blocks have"
" increasing heights that differ by one. Each block can contain up to "
"``6,000`` transactions (public network), being this value "
":ref:`configurable per network <config-network-properties>`."
msgstr ""

#: ../../source/concepts/block.rst:11
msgid ""
"|codename| blocks complete every ``30`` seconds, making transactions "
"confirm quickly enough for everyday use."
msgstr ""

#: ../../source/concepts/block.rst:15
msgid "Header"
msgstr ""

#: ../../source/concepts/block.rst:17
msgid "Nodes stores blocks in a serialized form as follows:"
msgstr ""

#: ../../source/concepts/block.rst:19
msgid "**Version**: 0x01"
msgstr ""

#: ../../source/concepts/block.rst:21
msgid "**EntityType**: 0x8143"
msgstr ""

#: ../../source/concepts/block.rst:23
msgid "**Inlines:**"
msgstr ""

#: ../../source/concepts/block.rst:25
msgid ":ref:`SizePrefixedEntity <sizeprefixedentity>`"
msgstr ""

#: ../../source/concepts/block.rst:26
msgid ":ref:`VerifiableEntity <verifiableentity>`"
msgstr ""

#: ../../source/concepts/block.rst:27
msgid ":ref:`EntityBody <entitybody>`"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Property"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Type"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Description"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "height"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid ":schema:`Height <types.cats>`"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid ""
"Height of the blockchain. Each block has a unique height. Subsequent "
"blocks differ in height by 1."
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "timestamp"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid ":schema:`Timestamp <types.cats>`"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Number of milliseconds elapsed since the creation of the nemesis block."
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "difficulty"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid ":schema:`Difficulty <types.cats>`"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Determines how difficult is to find a new block, based on previous blocks."
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "generationHashProof"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid ":schema:`VrfProof <block.cats>`"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Generation hash proof."
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "previousBlockHash"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid ":schema:`Hash256 <types.cats>`"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Hash of the previous block."
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "transactionsHash"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Hash of the transactions in this block."
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "receiptsHash"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Hash of the receipts generated by this block."
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "stateHash"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Hash of the global chain state at this block."
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "beneficiaryAddress"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid ":schema:`Address <types.cats>`"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Address of the optional beneficiary designated by harvester."
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "feeMultiplier"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid ":schema:`BlockFeeMultiplier <types.cats>`"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Fee multiplier applied to block transactions."
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "blockHeader_Reserved1"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "uint32"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Reserved padding to align end of BlockHeader on 8-byte boundary."
msgstr ""

#: ../../source/concepts/block.rst:60
msgid "Creation"
msgstr ""

#: ../../source/concepts/block.rst:62
msgid ""
"|codename| calls the first block in the chain the **nemesis block**. The "
"first block is defined before launching a new network and sets the "
"distribution of the network currency mosaics."
msgstr ""

#: ../../source/concepts/block.rst:65
msgid ""
"The process of creating the subsequent new blocks is called "
":doc:`harvesting <harvesting>`."
msgstr ""

#: ../../source/concepts/block.rst:67
msgid ""
"Blocks are created by :doc:`accounts <account>`, which are chosen by the "
":doc:`consensus algorithm <consensus-algorithm>` based on their "
"importance score. The consensus algorithm determines a new account to "
"harvest the subsequent block after each block creation."
msgstr ""

#: ../../source/concepts/block.rst:70
msgid ""
"The harvesting account receives the :doc:`fees <fees>` for the "
"transactions added in the block and the mosaics created by "
":doc:`inflation <inflation>`. This gives the harvester an incentive to "
"add as many transactions to the block as possible."
msgstr ""

#: ../../source/concepts/block.rst:77
msgid "Rollbacks"
msgstr ""

#: ../../source/concepts/block.rst:79
msgid ""
"To ensure fast response times, the |codename| blockchain is designed in a"
" way that, in the presence of a network failure or partition, requests "
"are still answered, and transactions added to the blockchain."
msgstr ""

#: ../../source/concepts/block.rst:81
msgid ""
"This naturally leads to **forks**, this is, different chains are created "
"in the disconnected parts of the network. Once connectivity is restored "
"**fork resolution** takes place to merge the divergent chains into a "
"single one."
msgstr ""

#: ../../source/concepts/block.rst:83
msgid ""
"This process might require that some blocks are **rolled back**: they are"
" removed from the blockchain so all their transactions move to the "
"**unconfirmed** state and have to be :ref:`validated <transaction-"
"validation>` again. At this point there's a chance that their deadlines "
"expire without ever being confirmed again."
msgstr ""

#: ../../source/concepts/block.rst:85
msgid ""
"For this reason, **confirmed** transactions (which have already been "
"added to the blockchain) cannot be relied upon until their block is "
":ref:`finalized <finalization>`, as shown below."
msgstr ""

#: ../../source/concepts/block.rst:91
msgid "Finalization"
msgstr ""

#: ../../source/concepts/block.rst:93
msgid ""
"This is the process of making changes on a blockchain ledger permanent. "
"Before blocks reach finality, they still might need to be rolled back in "
"the presence of a network failure or partition. However, once blocks are "
"finalized, they become immutable."
msgstr ""

#: ../../source/concepts/block.rst:96
msgid ""
"Finalization occurs in rounds. In each round, a **sorting algorithm** "
"selects the accounts responsible for validating all blocks pending "
"finalization. If a proposed block matches an account's node's records, "
"the account emits a positive vote."
msgstr ""

#: ../../source/concepts/block.rst:98
#, python-format
msgid ""
"Once **more than 67% of the stakes** selected for voting have emitted "
"positive votes, the block becomes finalized. At that point the "
"transactions linked to the block are permanently recorded on the "
"blockchain."
msgstr ""

#: ../../source/concepts/block.rst:101
msgid "In order to be eligible as a voter, an account must:"
msgstr ""

#: ../../source/concepts/block.rst:103
msgid "Be the owner of a node."
msgstr ""

#: ../../source/concepts/block.rst:104
msgid ""
"Have at least :ref:`minVoterBalance <config-network-properties>` network "
"currency units."
msgstr ""

#: ../../source/concepts/block.rst:105
msgid ""
"Be registered as a voter by announcing a :ref:`votingkeylinktransaction` "
"to the network."
msgstr ""

#: ../../source/concepts/block.rst:107
msgid ""
"When there is low connectivity, or many bad actors, finalization can take"
" longer than usual and create large :ref:`rollbacks`. However, no "
"finalized block will ever be rolled back."
msgstr ""

#: ../../source/concepts/block.rst:109
msgid ""
"Thus, clients that rely on the immutability of the blockchain history "
"should only trust **transactions from finalized blocks**."
msgstr ""

#: ../../source/concepts/block.rst:111
msgid ""
"Finalization rounds are actually called **Epochs** and happen every "
"**1440 blocks** or about **12h** (see ``votingSetGrouping`` in the "
":ref:`network properties <config-network-properties>`). Each Epoch is "
"divided in multiple **Finalization Points** (See the |techref| section "
"15.2 for more details)."
msgstr ""

#: ../../source/concepts/block.rst:115
msgid "Related transactions"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "Id"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid "0x4143"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid ":ref:`votingkeylinktransaction`"
msgstr ""

#: ../../source/concepts/block.rst:1
msgid ""
"Link an account with a BLS public key. Required for node operators "
"willing to vote finalized blocks."
msgstr ""

#: ../../source/concepts/block.rst:126
msgid "Related guides"
msgstr ""

