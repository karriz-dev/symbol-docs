# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-present, NEM
# This file is distributed under the same license as the symbol-docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: symbol-docs 0.22.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-19 21:32+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ko\n"
"Language-Team: ko <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/concepts/plugin.rst:3
msgid "Plugin"
msgstr ""

#: ../../source/concepts/plugin.rst:5
msgid ""
"|codename| comes with improved extensibility through its **plugin-based "
"architecture**."
msgstr ""

#: ../../source/concepts/plugin.rst:7
msgid ""
"A **plugin** is a self-contained group of functions that can be added to "
"the |codename|'s protocol to extend its capabilities. The plugin approach"
" allows developers to introduce different ways to alter the chain's state"
" via transactions without modifying the core engine or disrupting other "
"features."
msgstr ""

#: ../../source/concepts/plugin.rst:10
msgid ""
"Every base :doc:`transaction type <transaction>` available in |codename| "
"is defined as a separate plugin. This separation makes it possible to "
"only load a minimum subset of features to fit the network requirements."
msgstr ""

#: ../../source/concepts/plugin.rst:15
msgid "Architecture"
msgstr ""

#: ../../source/concepts/plugin.rst:17
msgid ""
"The simplest form of a |codename| plugin is a file written in C++ that "
"registers a ``PluginManager`` and exposes a single entry point. The file "
"has to match the following format so that :doc:`catapult-client "
"<../server>` can dynamically link the plugin."
msgstr ""

#: ../../source/concepts/plugin.rst:34
msgid ""
"All the plugin related files are stored in the same folder under the "
"``plugins`` directory to keep the code organized. The folder also "
"includes the file ``CMakeLists.txt``, which instructs the compiler on how"
" to build the plugin."
msgstr ""

#: ../../source/concepts/plugin.rst:45
msgid ""
"The plugin may define the following submodules internally to keep the "
"code organized:"
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid "Submodule"
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid "Description"
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid "``cache``"
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid ""
"Cache types and rules for serializing and deserializing model types to "
"and from binary."
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid "``config``"
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid ""
"Configurable parameters defined as a set of key-value pairs. The value of"
" each parameter is defined in the network configuration file ``config-"
"network.properties``."
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid "``model``"
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid ""
"Transaction types and the mapping of those types to parsing rules. "
"Specifically, the plugin defines rules for translating a transaction into"
" component notifications that are used in further processing."
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid "``observers``"
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid ""
"Observers process the notifications produced by block and transaction "
"processing. The registered observers can subscribe to general or plugin-"
"defined notifications and update blockchain state based on their values. "
"Observers don't require any validation logic because they are only called"
" after all applicable validators succeed."
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid "``plugins``"
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid ""
"Instructions for the core engine to load the plugin. This submodule "
"contains the ``PluginManager`` file."
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid "``validators``"
msgstr ""

#: ../../source/concepts/plugin.rst:1
msgid ""
"Stateless and stateful validators process the notifications produced by "
"block and transaction processing. The registered validators can subscribe"
" to general or plugin-defined notifications and reject disallowed values "
"or state changes."
msgstr ""

#: ../../source/concepts/plugin.rst:61
msgid "Security"
msgstr ""

#: ../../source/concepts/plugin.rst:63
msgid ""
"The code defined in a plugin runs forever unless the network is stopped "
"or all network nodes decide to use a new configuration that disables the "
"plugin. If a subset of nodes does not adopt the configuration changes, "
"the chain will split in two."
msgstr ""

#: ../../source/concepts/plugin.rst:66
msgid ""
"Before writing custom logic, developers should try to solve the use case "
"by using the set of :doc:`transactions provided  <transaction>` in "
"|codename| by default. Note that |codename| base plugins have been "
"audited. The platform is running an extensive test-net period before the "
"public launch, and its code has been open-source since April 2018."
msgstr ""

#: ../../source/concepts/plugin.rst:69
msgid ""
"If you decide to create a new plugin, it is recommended to test the code "
"extensively, bring external auditors, and run a testnet period before "
"launching the network in production to minimize vulnerabilities in the "
"custom code."
msgstr ""

