# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2018-present, NEM
# This file is distributed under the same license as the symbol-docs
# package.
# FIRST AUTHOR <EMAIL@ADDRESS>, 2023.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: symbol-docs 0.22.2\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2023-11-19 21:32+0900\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language: ko\n"
"Language-Team: ko <LL@li.org>\n"
"Plural-Forms: nplurals=1; plural=0;\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=utf-8\n"
"Content-Transfer-Encoding: 8bit\n"
"Generated-By: Babel 2.12.1\n"

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:9
msgid "Turning the asynchronous transaction announcement into synchronous"
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:11
msgid "Handy snippet to announce a transaction and wait until this is confirmed."
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:15
msgid "Use case"
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:17
msgid ""
"When announcing a transaction in NIS1, you had to wait to get the "
"response from the node. |codename| works differently: when a transaction "
"is announced, the REST API server will always return an OK. As a result, "
"the developer does not have to wait until the server returns a response, "
"being able to make more responsive apps. However, now is the developer's "
"responsibility to check the status of the transaction and ensure it is "
"confirmed."
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:22
msgid ""
"The negative aspect of announcing transactions asynchronously is that it "
"adds unnecessary complexity to small projects. The |sdk| "
"``TransactionService`` aims to solve this problem by providing a function"
" that waits for the confirmation or rejection of the transaction."
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:27
msgid "Prerequisites"
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:29
msgid ""
"Complete :doc:`sending mosaics and messages between two accounts "
"<../transfer/sending-a-transfer-transaction>` guide."
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:30
msgid "Create a new :ref:`account <setup-creating-a-test-account>`."
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:31
msgid ""
"Load the account with enough |networkcurrency| to pay for transaction "
"fees."
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:35
msgid "Sending a synchronous transaction"
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:37
msgid ""
"Alice is developing an app to send 10 |privatenetworkcurrency| to Bob and"
" wants to know if the transaction has reached the network before sending "
"Bob an email."
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:39
msgid ""
"Create a new ``.ts`` file. Then, define and sign a "
":doc:`TransferTransaction <../../concepts/transfer-transaction>`."
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:43
#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:57
msgid ""
":viewsource:`https://github.com/symbol/symbol-"
"docs/blob/main/source/resources/examples/typescript/monitor/TurningTheAsynchronousTransactionAnnouncementIntoSynchronous.ts`"
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:48
#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:62
msgid ""
":viewsource:`https://github.com/symbol/symbol-"
"docs/blob/main/source/resources/examples/typescript/monitor/TurningTheAsynchronousTransactionAnnouncementIntoSynchronous.js`"
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:53
msgid ""
"Once signed, :doc:`announce the transaction <../../concepts/transaction>`"
" using ``TransactionService.announce`` instead of "
"``TransactionHttp.announce``."
msgstr ""

#: ../../source/guides/monitor/turning-the-asynchronous-transaction-announcement-into-synchronous.rst:67
msgid ""
"The function ``TransactionService.announce()`` will respond successfully "
"if the transaction reaches the network and does not have validation "
"errors. You might still need to :doc:`wait for several confirmations  "
"<../../concepts/transaction>` before executing additional actions."
msgstr ""

